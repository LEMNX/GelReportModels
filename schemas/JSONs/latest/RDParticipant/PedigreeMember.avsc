{
  "type" : "record",
  "name" : "PedigreeMember",
  "namespace" : "Gel_BioInf_Models",
  "doc" : "This defines a RD Participant (demographics and pedigree information)",
  "fields" : [ {
    "name" : "pedigreeId",
    "type" : [ "null", "int" ],
    "doc" : "Numbering used to refer to each member of the pedigree"
  }, {
    "name" : "isProband",
    "type" : [ "null", "boolean" ],
    "doc" : "If this field is true, the member should be consider the proband of this family"
  }, {
    "name" : "participantId",
    "type" : [ "null", "string" ],
    "doc" : "participantId"
  }, {
    "name" : "participantQCState",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "ParticipantQCState",
      "doc" : "QCState Status",
      "symbols" : [ "noState", "passedMedicalReviewReadyForInterpretation", "passedMedicalReviewNotReadyForInterpretation", "queryToGel", "queryToGMC", "failed" ]
    } ],
    "doc" : "participantQCState"
  }, {
    "name" : "gelSuperFamilyId",
    "type" : [ "null", "string" ],
    "doc" : "superFamily id, this id is built as a concatenation of all families id in this superfamily i.e, fam10024_fam100457"
  }, {
    "name" : "sex",
    "type" : {
      "type" : "enum",
      "name" : "Sex",
      "doc" : "Sex",
      "symbols" : [ "MALE", "FEMALE", "UNKNOWN" ]
    },
    "doc" : "Sex of the Participant"
  }, {
    "name" : "personKaryotipicSex",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "PersonKaryotipicSex",
      "doc" : "Karyotipic Sex",
      "symbols" : [ "UNKNOWN", "XX", "XY", "XO", "XXY", "XXX", "XXYY", "XXXY", "XXXX", "XYY", "OTHER" ]
    } ],
    "doc" : "Karyotypic sex of the participant as previously established or by looking at the GEL genome"
  }, {
    "name" : "yearOfBirth",
    "type" : [ "null", "string" ],
    "doc" : "Year of Birth"
  }, {
    "name" : "fatherId",
    "type" : [ "null", "int" ],
    "doc" : "refers to the pedigreeId of the father\n    Id of the parent, if unknown then no parent is referenced. Parents may need to be entered even if no data is known\n    about them in order to unambiguously reconstruct the pedigree."
  }, {
    "name" : "motherId",
    "type" : [ "null", "int" ],
    "doc" : "refers to the pedigreeId of the mother\n    Id of the parent, if unknown then no parent is referenced. Parents may need to be entered even if no data is known\n    about them in order to unambiguously reconstruct the pedigree."
  }, {
    "name" : "superFatherId",
    "type" : [ "null", "int" ],
    "doc" : "this id is built using the original familyId and the original pedigreeId of the father"
  }, {
    "name" : "superMotherId",
    "type" : [ "null", "int" ],
    "doc" : "this id is built using the original familyId and the original pedigreeId of the mother"
  }, {
    "name" : "twinGroup",
    "type" : [ "null", "int" ],
    "doc" : "Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number"
  }, {
    "name" : "monozygotic",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "TernaryOption",
      "doc" : "This the define a yes/no/unknown case",
      "symbols" : [ "yes", "no", "unknown" ]
    } ],
    "doc" : "A property of the twinning group but should be entered for all members"
  }, {
    "name" : "adoptedStatus",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "AdoptedStatus",
      "doc" : "adoptedin means adopted into the family\nadoptedout means child belonged to the family and was adopted out",
      "symbols" : [ "not_adopted", "adoptedin", "adoptedout" ]
    } ],
    "doc" : "Adopted Status"
  }, {
    "name" : "lifeStatus",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "LifeStatus",
      "doc" : "Life Status",
      "symbols" : [ "ALIVE", "ABORTED", "DECEASED", "UNBORN", "STILLBORN", "MISCARRIAGE" ]
    } ],
    "doc" : "Life Status"
  }, {
    "name" : "consanguineousParents",
    "type" : [ "null", "TernaryOption" ],
    "doc" : "The parents of this participant has a consanguineous relationship"
  }, {
    "name" : "affectionStatus",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "AffectionStatus",
      "doc" : "Affection Status",
      "symbols" : [ "UNAFFECTED", "AFFECTED", "UNCERTAIN" ]
    } ],
    "doc" : "Affection Status"
  }, {
    "name" : "disorderList",
    "type" : [ "null", {
      "type" : "array",
      "items" : {
        "type" : "record",
        "name" : "Disorder",
        "doc" : "This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.\nCurrently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be\ncompleted but we add the others for generality",
        "fields" : [ {
          "name" : "diseaseGroup",
          "type" : [ "null", "string" ],
          "doc" : "This is Level2 Title for this disorder"
        }, {
          "name" : "diseaseSubGroup",
          "type" : [ "null", "string" ],
          "doc" : "This is Level3 Title for this disorder"
        }, {
          "name" : "specificDisease",
          "type" : [ "null", "string" ],
          "doc" : "This is Level4 Title for this disorder"
        }, {
          "name" : "ageOfOnset",
          "type" : [ "null", "string" ],
          "doc" : "Age of onset in months"
        } ]
      }
    } ],
    "doc" : "Clinical Data (disorders). If the family member is unaffected as per affectionStatus then this list is empty"
  }, {
    "name" : "hpoTermList",
    "type" : [ "null", {
      "type" : "array",
      "items" : {
        "type" : "record",
        "name" : "HpoTerm",
        "doc" : "This defines an HPO term and its modifiers (possibly multiple)\nIf HPO term presence is unknown we don't have a entry on the list",
        "fields" : [ {
          "name" : "term",
          "type" : "string",
          "doc" : "Identifier of the HPO term"
        }, {
          "name" : "termPresence",
          "type" : [ "null", "boolean" ],
          "doc" : "This is whether the term is present in the participant (default is null=unknown) true=term is present in participant,\n    false=term is not present"
        }, {
          "name" : "hpoBuildNumber",
          "type" : [ "null", "string" ],
          "doc" : "hpoBuildNumber"
        }, {
          "name" : "modifiers",
          "type" : [ "null", {
            "type" : "map",
            "values" : "string"
          } ],
          "doc" : "Modifier associated with the HPO term"
        }, {
          "name" : "ageOfOnset",
          "type" : [ "null", "string" ],
          "doc" : "Age of onset in months"
        } ]
      }
    } ],
    "doc" : "Clinical Data (HPO terms)"
  }, {
    "name" : "ancestries",
    "type" : [ "null", {
      "type" : "record",
      "name" : "Ancestries",
      "doc" : "Ancestries, defined as Ethnic category(ies) and Chi-square test",
      "fields" : [ {
        "name" : "mothersEthnicOrigin",
        "type" : [ "null", {
          "type" : "enum",
          "name" : "EthnicCategory",
          "doc" : "This is the list of ethnics in ONS16\n\n* `D`:  Mixed: White and Black Caribbean\n* `E`:  Mixed: White and Black African\n* `F`:  Mixed: White and Asian\n* `G`:  Mixed: Any other mixed background\n* `A`:  White: British\n* `B`:  White: Irish\n* `C`:  White: Any other White background\n* `L`:  Asian or Asian British: Any other Asian background\n* `M`:  Black or Black British: Caribbean\n* `N`:  Black or Black British: African\n* `H`:  Asian or Asian British: Indian\n* `J`:  Asian or Asian British: Pakistani\n* `K`:  Asian or Asian British: Bangladeshi\n* `P`:  Black or Black British: Any other Black background\n* `S`:  Other Ethnic Groups: Any other ethnic group\n* `R`:  Other Ethnic Groups: Chinese\n* `Z`:  Not stated",
          "symbols" : [ "D", "E", "F", "G", "A", "B", "C", "L", "M", "N", "H", "J", "K", "P", "S", "R", "Z" ]
        } ],
        "doc" : "Mother's Ethnic Origin"
      }, {
        "name" : "mothersOtherRelevantAncestry",
        "type" : [ "null", "string" ],
        "doc" : "Mother's Ethnic Origin Description"
      }, {
        "name" : "fathersEthnicOrigin",
        "type" : [ "null", "EthnicCategory" ],
        "doc" : "Father's Ethnic Origin"
      }, {
        "name" : "fathersOtherRelevantAncestry",
        "type" : [ "null", "string" ],
        "doc" : "Father's Ethnic Origin Description"
      }, {
        "name" : "chiSquare1KGenomesPhase3Pop",
        "type" : [ "null", {
          "type" : "array",
          "items" : {
            "type" : "record",
            "name" : "ChiSquare1KGenomesPhase3Pop",
            "doc" : "Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations",
            "fields" : [ {
              "name" : "kGSuperPopCategory",
              "type" : {
                "type" : "enum",
                "name" : "KGSuperPopCategory",
                "doc" : "1K Super Population",
                "symbols" : [ "AFR", "AMR", "EAS", "EUR", "SAS" ]
              },
              "doc" : "1K Super Population"
            }, {
              "name" : "kGPopCategory",
              "type" : [ "null", {
                "type" : "enum",
                "name" : "KGPopCategory",
                "doc" : "1K Population",
                "symbols" : [ "ACB", "ASW", "BEB", "CDX", "CEU", "CHB", "CHS", "CLM", "ESN", "FIN", "GBR", "GIH", "GWD", "IBS", "ITU", "JPT", "KHV", "LWK", "MSL", "MXL", "PEL", "PJL", "PUR", "STU", "TSI", "YRI" ]
              } ],
              "doc" : "1K Population"
            }, {
              "name" : "chiSquare",
              "type" : "double",
              "doc" : "Chi-square test for goodness of fit of this sample to this 1000 Genomes Phase 3 population"
            } ]
          }
        } ],
        "doc" : "Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations"
      } ]
    } ],
    "doc" : "Participant's ancestries, defined as Mother's/Father's Ethnic Origin and Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations"
  }, {
    "name" : "consentStatus",
    "type" : [ "null", {
      "type" : "record",
      "name" : "ConsentStatus",
      "doc" : "Consent Status",
      "fields" : [ {
        "name" : "programmeConsent",
        "type" : "boolean",
        "doc" : "Is this individual consented to the programme?\n    It could simple be a family member that is not consented but for whom affection status is known",
        "default" : false
      }, {
        "name" : "primaryFindingConsent",
        "type" : "boolean",
        "doc" : "Consent for feedback of primary findings?",
        "default" : false
      }, {
        "name" : "secondaryFindingConsent",
        "type" : "boolean",
        "doc" : "Consent for secondary finding lookup",
        "default" : false
      }, {
        "name" : "carrierStatusConsent",
        "type" : "boolean",
        "doc" : "Consent for carrier status check?",
        "default" : false
      } ]
    } ],
    "doc" : "What has this participant consented to?\n    A participant that has been consented to the programme should also have sequence data associated with them; however\n    this needs to be programmatically checked"
  }, {
    "name" : "samples",
    "type" : [ "null", {
      "type" : "array",
      "items" : {
        "type" : "record",
        "name" : "Sample",
        "fields" : [ {
          "name" : "sampleId",
          "type" : "string",
          "doc" : "Sample Id (e.g, LP00012645_5GH))"
        }, {
          "name" : "labSampleId",
          "type" : "string",
          "doc" : "Lab Id (this is from the bio-repository e.g D14.25586 or another format based on which center)"
        }, {
          "name" : "source",
          "type" : [ "null", {
            "type" : "enum",
            "name" : "SampleSource",
            "symbols" : [ "BLOOD", "SALIVA", "FIBROBLAST", "TISSUE" ]
          } ],
          "doc" : "Source"
        }, {
          "name" : "product",
          "type" : [ "null", {
            "type" : "enum",
            "name" : "Product",
            "symbols" : [ "DNA", "RNA" ]
          } ],
          "doc" : "Product"
        }, {
          "name" : "preparationMethod",
          "type" : [ "null", {
            "type" : "enum",
            "name" : "PreparationMethod",
            "symbols" : [ "EDTA", "ORAGENE", "FF" ]
          } ],
          "doc" : "preparationMethod"
        } ]
      }
    } ],
    "doc" : "This is an array containing all the samples that belong to this individual, e.g [\"LP00002255_GA4\"]"
  }, {
    "name" : "inbreedingCoefficient",
    "type" : [ "null", {
      "type" : "record",
      "name" : "InbreedingCoefficient",
      "doc" : "Inbreeding coefficient",
      "fields" : [ {
        "name" : "sampleId",
        "type" : "string",
        "doc" : "This is the sample id against which the coefficient was estimated"
      }, {
        "name" : "program",
        "type" : "string",
        "doc" : "Name of program used to calculate the coefficient"
      }, {
        "name" : "version",
        "type" : "string",
        "doc" : "Version of the programme"
      }, {
        "name" : "estimationMethod",
        "type" : "string",
        "doc" : "Where various methods for estimation exist, which method was used."
      }, {
        "name" : "coefficient",
        "type" : "double",
        "doc" : "Inbreeding coefficient ideally a real number in [0,1]"
      }, {
        "name" : "standardError",
        "type" : [ "null", "double" ],
        "doc" : "Standard error of the Inbreeding coefficient"
      } ]
    } ],
    "doc" : "Inbreeding Coefficient Estimation"
  }, {
    "name" : "additionalInformation",
    "type" : [ "null", {
      "type" : "map",
      "values" : "string"
    } ],
    "doc" : "We could add a map here to store additional information for example URIs to images, ECGs, etc\n    Null by default"
  } ]
}
