{
  "protocol" : "MDTDelivery",
  "namespace" : "Gel_BioInf_Models",
  "doc" : "This protocol defines the integration mechanism to store analysis results in\n    the MDT (Multi-disciplinary Tool).",
  "types" : [ {
    "type" : "record",
    "name" : "VersionControl",
    "fields" : [ {
      "name" : "GitVersionControl",
      "type" : "string",
      "doc" : "This is the version for the entire set of data models as referred to the Git release tag",
      "default" : "3.0.0"
    } ]
  }, {
    "type" : "enum",
    "name" : "FileType",
    "symbols" : [ "BAM", "gVCF", "VCF_small", "VCF_somatic_small", "VCF_CNV", "VCF_somatic_CNV", "VCF_SV", "VCF_somatic_SV", "VCF_SV_CNV", "SVG", "ANN", "BigWig", "MD5Sum", "ROH", "OTHER" ]
  }, {
    "type" : "record",
    "name" : "File",
    "doc" : "This defines a file\nThis Record is defined by the sampleID and a URI\nCurrently SampleID can be a single String or an array of strings if multiple samples are associated with the same file\n*",
    "fields" : [ {
      "name" : "SampleId",
      "type" : [ "null", "string", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Unique ID(s) of the Sample, for example in a multisample vcf this would have an array of all the sample ids"
    }, {
      "name" : "URIFile",
      "type" : "string",
      "doc" : "URI PATH"
    }, {
      "name" : "fileType",
      "type" : "FileType"
    }, {
      "name" : "md5Sum",
      "type" : [ "null", "File" ]
    } ]
  }, {
    "type" : "record",
    "name" : "OtherFamilyHistory",
    "doc" : "Family history for secondary findings.\nArrays of strings describing discrete family history phenotypes.\nUsually: `EndocrineTumours`, `colorectal`, `BreastOvarian` and `HDOrStroke` but can be others",
    "fields" : [ {
      "name" : "maternalFamilyHistory",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Relevant Maternal family history"
    }, {
      "name" : "paternalFamilyHistory",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Relevant Maternal family history"
    } ]
  }, {
    "type" : "enum",
    "name" : "Sex",
    "doc" : "Sex",
    "symbols" : [ "male", "female", "unknown", "undetermined" ]
  }, {
    "type" : "enum",
    "name" : "PersonKaryotipicSex",
    "doc" : "Karyotipic Sex",
    "symbols" : [ "unknown", "XX", "XY", "XO", "XXY", "XXX", "XXYY", "XXXY", "XXXX", "XYY", "other" ]
  }, {
    "type" : "enum",
    "name" : "Penetrance",
    "doc" : "Penetrance assumed in the analysis",
    "symbols" : [ "complete", "incomplete" ]
  }, {
    "type" : "enum",
    "name" : "TernaryOption",
    "doc" : "This the define a yes/no/unknown case",
    "symbols" : [ "yes", "no", "unknown" ]
  }, {
    "type" : "enum",
    "name" : "EthnicCategory",
    "doc" : "This is the list of ethnics in ONS16\n\n* `D`:  Mixed: White and Black Caribbean\n* `E`:  Mixed: White and Black African\n* `F`:  Mixed: White and Asian\n* `G`:  Mixed: Any other mixed background\n* `A`:  White: British\n* `B`:  White: Irish\n* `C`:  White: Any other White background\n* `L`:  Asian or Asian British: Any other Asian background\n* `M`:  Black or Black British: Caribbean\n* `N`:  Black or Black British: African\n* `H`:  Asian or Asian British: Indian\n* `J`:  Asian or Asian British: Pakistani\n* `K`:  Asian or Asian British: Bangladeshi\n* `P`:  Black or Black British: Any other Black background\n* `S`:  Other Ethnic Groups: Any other ethnic group\n* `R`:  Other Ethnic Groups: Chinese\n* `Z`:  Not stated",
    "symbols" : [ "D", "E", "F", "G", "A", "B", "C", "L", "M", "N", "H", "J", "K", "P", "S", "R", "Z" ]
  }, {
    "type" : "enum",
    "name" : "KGPopCategory",
    "doc" : "1K Population",
    "symbols" : [ "ACB", "ASW", "BEB", "CDX", "CEU", "CHB", "CHS", "CLM", "ESN", "FIN", "GBR", "GIH", "GWD", "IBS", "ITU", "JPT", "KHV", "LWK", "MSL", "MXL", "PEL", "PJL", "PUR", "STU", "TSI", "YRI" ]
  }, {
    "type" : "enum",
    "name" : "KGSuperPopCategory",
    "doc" : "1K Super Population",
    "symbols" : [ "AFR", "AMR", "EAS", "EUR", "SAS" ]
  }, {
    "type" : "record",
    "name" : "ChiSquare1KGenomesPhase3Pop",
    "doc" : "Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations",
    "fields" : [ {
      "name" : "kGSuperPopCategory",
      "type" : "KGSuperPopCategory",
      "doc" : "1K Super Population"
    }, {
      "name" : "kGPopCategory",
      "type" : [ "null", "KGPopCategory" ],
      "doc" : "1K Population"
    }, {
      "name" : "chiSquare",
      "type" : "float",
      "doc" : "Chi-square test for goodness of fit of this sample to this 1000 Genomes Phase 3 population"
    } ]
  }, {
    "type" : "record",
    "name" : "Ancestries",
    "doc" : "Ancestries, defined as Ethnic category(ies) and Chi-square test",
    "fields" : [ {
      "name" : "mothersEthnicOrigin",
      "type" : [ "null", "EthnicCategory" ],
      "doc" : "Mother's Ethnic Origin"
    }, {
      "name" : "mothersOtherRelevantAncestry",
      "type" : [ "null", "string" ],
      "doc" : "Mother's Ethnic Origin Description"
    }, {
      "name" : "fathersEthnicOrigin",
      "type" : [ "null", "EthnicCategory" ],
      "doc" : "Father's Ethnic Origin"
    }, {
      "name" : "fathersOtherRelevantAncestry",
      "type" : [ "null", "string" ],
      "doc" : "Father's Ethnic Origin Description"
    }, {
      "name" : "chiSquare1KGenomesPhase3Pop",
      "type" : [ "null", {
        "type" : "array",
        "items" : "ChiSquare1KGenomesPhase3Pop"
      } ],
      "doc" : "Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations"
    } ]
  }, {
    "type" : "record",
    "name" : "ConsentStatus",
    "doc" : "Consent Status",
    "fields" : [ {
      "name" : "programmeConsent",
      "type" : "boolean",
      "doc" : "Is this individual consented to the programme?\n    It could simple be a family member that is not consented but for whom affection status is known",
      "default" : false
    }, {
      "name" : "primaryFindingConsent",
      "type" : "boolean",
      "doc" : "Consent for feedback of primary findings?",
      "default" : false
    }, {
      "name" : "secondaryFindingConsent",
      "type" : "boolean",
      "doc" : "Consent for secondary finding lookup",
      "default" : false
    }, {
      "name" : "carrierStatusConsent",
      "type" : "boolean",
      "doc" : "Consent for carrier status check?",
      "default" : false
    } ]
  }, {
    "type" : "record",
    "name" : "InbreedingCoefficient",
    "doc" : "Inbreeding coefficient",
    "fields" : [ {
      "name" : "sampleId",
      "type" : "string",
      "doc" : "This is the sample id against which the coefficient was estimated"
    }, {
      "name" : "program",
      "type" : "string",
      "doc" : "Name of program used to calculate the coefficient"
    }, {
      "name" : "version",
      "type" : "string",
      "doc" : "Version of the programme"
    }, {
      "name" : "estimationMethod",
      "type" : "string",
      "doc" : "Where various methods for estimation exist, which method was used."
    }, {
      "name" : "coefficient",
      "type" : "double",
      "doc" : "Inbreeding coefficient ideally a real number in [0,1]"
    }, {
      "name" : "standardError",
      "type" : [ "null", "double" ],
      "doc" : "Standard error of the Inbreeding coefficient"
    } ]
  }, {
    "type" : "record",
    "name" : "Disorder",
    "doc" : "This is quite GEL specific. This is the way is stored in ModelCatalogue and PanelApp.\nCurrently all specific disease titles are assigned to a disease subgroup so really only specificDisease needs to be\ncompleted but we add the others for generality",
    "fields" : [ {
      "name" : "diseaseGroup",
      "type" : [ "null", "string" ],
      "doc" : "This is Level2 Title for this disorder"
    }, {
      "name" : "diseaseSubGroup",
      "type" : [ "null", "string" ],
      "doc" : "This is Level3 Title for this disorder"
    }, {
      "name" : "specificDisease",
      "type" : [ "null", "string" ],
      "doc" : "This is Level4 Title for this disorder"
    }, {
      "name" : "ageOfOnset",
      "type" : [ "null", "string" ],
      "doc" : "Age of onset in months"
    } ]
  }, {
    "type" : "record",
    "name" : "HpoTerm",
    "doc" : "This defines an HPO term and its modifiers (possibly multiple)\nIf HPO term presence is unknown we don't have a entry on the list",
    "fields" : [ {
      "name" : "term",
      "type" : "string",
      "doc" : "Identifier of the HPO term"
    }, {
      "name" : "termPresence",
      "type" : [ "null", "boolean" ],
      "doc" : "This is whether the term is present in the participant (default is null=unknown) true=term is present in participant,\n    false=term is not present"
    }, {
      "name" : "modifiers",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "Modifier associated with the HPO term"
    }, {
      "name" : "ageOfOnset",
      "type" : [ "null", "string" ],
      "doc" : "Age of onset in months"
    } ]
  }, {
    "type" : "enum",
    "name" : "AffectionStatus",
    "doc" : "Affection Status",
    "symbols" : [ "unaffected", "affected", "unknown" ]
  }, {
    "type" : "enum",
    "name" : "LifeStatus",
    "doc" : "Life Status",
    "symbols" : [ "alive", "aborted", "deceased", "unborn", "stillborn", "miscarriage" ]
  }, {
    "type" : "enum",
    "name" : "AdoptedStatus",
    "doc" : "adoptedin means adopted into the family\nadoptedout means child belonged to the family and was adopted out",
    "symbols" : [ "not_adopted", "adoptedin", "adoptedout" ]
  }, {
    "type" : "record",
    "name" : "RDParticipant",
    "doc" : "This defines a RD Participant (demographics and pedigree information)",
    "fields" : [ {
      "name" : "versionControl",
      "type" : "VersionControl",
      "doc" : "Model version number"
    }, {
      "name" : "pedigreeId",
      "type" : "int",
      "doc" : "Numbering used to refer to each member of the pedigree"
    }, {
      "name" : "isProband",
      "type" : "boolean",
      "doc" : "If this field is true, the member should be consider the proband of this family"
    }, {
      "name" : "gelId",
      "type" : [ "null", "string" ],
      "doc" : "gel internal identifier, only required when the participant belongs to the program"
    }, {
      "name" : "gelFamilyId",
      "type" : "string",
      "doc" : "Family id which internally translate to a sample set"
    }, {
      "name" : "gelSuperFamilyId",
      "type" : [ "null", "string" ],
      "doc" : "superFamily id, this id is built as a concatenation of all families id in this superfamily i.e, fam10024_fam100457"
    }, {
      "name" : "sex",
      "type" : "Sex",
      "doc" : "Sex of the Participant"
    }, {
      "name" : "personKaryotipicSex",
      "type" : [ "null", "PersonKaryotipicSex" ],
      "doc" : "Karyotypic sex of the participant as previously established or by looking at the GEL genome"
    }, {
      "name" : "yearOfBirth",
      "type" : [ "null", "string" ],
      "doc" : "Year of Birth"
    }, {
      "name" : "fatherId",
      "type" : [ "null", "int" ],
      "doc" : "refers to the pedigreeId of the father\n    Id of the parent, if unknown then no parent is referenced. Parents may need to be entered even if no data is known\n    about them in order to unambiguously reconstruct the pedigree."
    }, {
      "name" : "motherId",
      "type" : [ "null", "int" ],
      "doc" : "refers to the pedigreeId of the mother\n    Id of the parent, if unknown then no parent is referenced. Parents may need to be entered even if no data is known\n    about them in order to unambiguously reconstruct the pedigree."
    }, {
      "name" : "superFatherId",
      "type" : [ "null", "int" ],
      "doc" : "this id is built using the original familyId and the original pedigreeId of the father"
    }, {
      "name" : "superMotherId",
      "type" : [ "null", "int" ],
      "doc" : "this id is built using the original familyId and the original pedigreeId of the mother"
    }, {
      "name" : "twinGroup",
      "type" : [ "null", "int" ],
      "doc" : "Each twin group is numbered, i.e. all members of a group of multiparous births receive the same number"
    }, {
      "name" : "monozygotic",
      "type" : [ "null", "TernaryOption" ],
      "doc" : "A property of the twinning group but should be entered for all members"
    }, {
      "name" : "adoptedStatus",
      "type" : "AdoptedStatus",
      "doc" : "Adopted Status"
    }, {
      "name" : "lifeStatus",
      "type" : "LifeStatus",
      "doc" : "Life Status"
    }, {
      "name" : "consanguineousParents",
      "type" : "TernaryOption",
      "doc" : "The parents of this participant has a consanguineous relationship"
    }, {
      "name" : "consanguineousPopulation",
      "type" : [ "null", "string" ],
      "doc" : "Offspring from a consanguineous population"
    }, {
      "name" : "affectionStatus",
      "type" : "AffectionStatus",
      "doc" : "Affection Status"
    }, {
      "name" : "disorderList",
      "type" : {
        "type" : "array",
        "items" : "Disorder"
      },
      "doc" : "Clinical Data (disorders). If the family member is unaffected as per affectionStatus then this list is empty"
    }, {
      "name" : "hpoTermList",
      "type" : {
        "type" : "array",
        "items" : "HpoTerm"
      },
      "doc" : "Clinical Data (HPO terms)"
    }, {
      "name" : "ancestries",
      "type" : "Ancestries",
      "doc" : "Participant's ancestries, defined as Mother's/Father's Ethnic Origin and Chi-square test for goodness of fit of this sample to 1000 Genomes Phase 3 populations"
    }, {
      "name" : "consentStatus",
      "type" : "ConsentStatus",
      "doc" : "What has this participant consented to?\n    A participant that has been consented to the programme should also have sequence data associated with them; however\n    this needs to be programmatically checked"
    }, {
      "name" : "samples",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "This is an array containing all the samples that belong to this individual, e.g [\"LP00002255_GA4\"]"
    }, {
      "name" : "inbreedingCoefficient",
      "type" : [ "null", "InbreedingCoefficient" ],
      "doc" : "Inbreeding Coefficient Estimation"
    }, {
      "name" : "additionalInformation",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "We could add a map here to store additional information for example URIs to images, ECGs, etc\n    Null by default"
    } ]
  }, {
    "type" : "record",
    "name" : "AnalysisPanel",
    "fields" : [ {
      "name" : "specificDisease",
      "type" : "string"
    }, {
      "name" : "panelName",
      "type" : "string"
    }, {
      "name" : "panelVersion",
      "type" : [ "null", "string" ]
    }, {
      "name" : "review_outcome",
      "type" : "string"
    }, {
      "name" : "multiple_genetic_origins",
      "type" : "string"
    } ]
  }, {
    "type" : "record",
    "name" : "DiseasePenetrance",
    "fields" : [ {
      "name" : "specificDisease",
      "type" : "string"
    }, {
      "name" : "penetrance",
      "type" : "Penetrance"
    } ]
  }, {
    "type" : "record",
    "name" : "Pedigree",
    "doc" : "This is the concept of a family with associated phenotypes as present in the record RDParticipant",
    "fields" : [ {
      "name" : "versionControl",
      "type" : "VersionControl",
      "doc" : "Model version number"
    }, {
      "name" : "gelFamilyId",
      "type" : "string",
      "doc" : "Family id which internally translate to a sample set"
    }, {
      "name" : "participants",
      "type" : {
        "type" : "array",
        "items" : "RDParticipant"
      }
    }, {
      "name" : "analysisPanels",
      "type" : [ "null", {
        "type" : "array",
        "items" : "AnalysisPanel"
      } ]
    }, {
      "name" : "diseasePenetrances",
      "type" : [ "null", {
        "type" : "array",
        "items" : "DiseasePenetrance"
      } ]
    } ]
  }, {
    "type" : "enum",
    "name" : "ReportedModeOfInheritance",
    "doc" : "An enumeration for the different mode of inheritances:\n\n* `monoallelic_not_imprinted`: MONOALLELIC, autosomal or pseudoautosomal, not imprinted\n* `monoallelic_maternally_imprinted`: MONOALLELIC, autosomal or pseudoautosomal, maternally imprinted (paternal allele expressed)\n* `monoallelic_paternally_imprinted`: MONOALLELIC, autosomal or pseudoautosomal, paternally imprinted (maternal allele expressed)\n* `monoallelic`: MONOALLELIC, autosomal or pseudoautosomal, imprinted status unknown\n* `biallelic`: BIALLELIC, autosomal or pseudoautosomal\n* `monoallelic_and_biallelic`: BOTH monoallelic and biallelic, autosomal or pseudoautosomal\n* `monoallelic_and_more_severe_biallelic`: BOTH monoallelic and biallelic, autosomal or pseudoautosomal (but BIALLELIC mutations cause a more SEVERE disease form), autosomal or pseudoautosomal\n* `xlinked_biallelic`: X-LINKED: hemizygous mutation in males, biallelic mutations in females\n* `xlinked_monoallelic`: X linked: hemizygous mutation in males, monoallelic mutations in females may cause disease (may be less severe, later onset than males)\n* `mitochondrial`: MITOCHONDRIAL\n* `unknown`: Unknown",
    "symbols" : [ "monoallelic", "monoallelic_not_imprinted", "monoallelic_maternally_imprinted", "monoallelic_paternally_imprinted", "biallelic", "monoallelic_and_biallelic", "monoallelic_and_more_severe_biallelic", "xlinked_biallelic", "xlinked_monoallelic", "mitochondrial", "unknown" ]
  }, {
    "type" : "enum",
    "name" : "Zygosity",
    "doc" : "It is a representation of the zygosity\n\n* `reference_homozygous`: 0/0, 0|0\n* `heterozygous`: 0/1, 1/0, 1|0, 0|1\n* `alternate_homozygous`: 1/1, 1|1\n* `missing`: ./., .|.\n* `half_missing_reference`: ./0, 0/., 0|., .|0\n* `half_missing_alternate`: ./1, 1/., 1|., .|1\n* `alternate_hemizigous`: 1\n* `reference_hemizigous`: 0\n* `unk`: Anything unexpected",
    "symbols" : [ "reference_homozygous", "heterozygous", "alternate_homozygous", "missing", "half_missing_reference", "half_missing_alternate", "alternate_hemizigous", "reference_hemizigous", "unk" ]
  }, {
    "type" : "record",
    "name" : "CalledGenotype",
    "doc" : "This is intended to hold the genotypes for the family members\nIn principle it is a phased zygosity as in VCF spec and called by the analysis provider if further phasing is conducted",
    "fields" : [ {
      "name" : "gelId",
      "type" : "string",
      "doc" : "Participant id of the family member:"
    }, {
      "name" : "sampleId",
      "type" : "string",
      "doc" : "LP Number of the family member:"
    }, {
      "name" : "genotype",
      "type" : "Zygosity",
      "doc" : "Zygosity"
    }, {
      "name" : "phaseSet",
      "type" : [ "null", "int" ],
      "doc" : "Phase set of variants when variants are phased"
    }, {
      "name" : "depthReference",
      "type" : [ "null", "int" ],
      "doc" : "Depth for Reference Allele"
    }, {
      "name" : "depthAlternate",
      "type" : [ "null", "int" ],
      "doc" : "Depth for Alternate Allele"
    }, {
      "name" : "copyNumber",
      "type" : [ "null", "int" ],
      "doc" : "Copy number genotype for imprecise events"
    } ]
  }, {
    "type" : "enum",
    "name" : "FeatureTypes",
    "symbols" : [ "RegulatoryRegion", "Gene", "Transcript" ]
  }, {
    "type" : "record",
    "name" : "GenomicFeature",
    "fields" : [ {
      "name" : "featureType",
      "type" : "FeatureTypes",
      "doc" : "Feature Type"
    }, {
      "name" : "ensemblId",
      "type" : "string",
      "doc" : "Transcript used, this should be a feature ID from Ensembl, (i.e, ENST00000544455)"
    }, {
      "name" : "HGNC",
      "type" : [ "null", "string" ],
      "doc" : "This field is optional, BUT it should be filled if possible"
    }, {
      "name" : "other_ids",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "Others IDs"
    } ]
  }, {
    "type" : "enum",
    "name" : "VariantClassification",
    "doc" : "This is the classification of the variant according to standard practice guidelines (e.g. ACMG)",
    "symbols" : [ "BENIGN", "LIKELY_BENIGN", "VUS", "LIKELY_PATHOGENIC", "PATHOGENIC" ]
  }, {
    "type" : "enum",
    "name" : "Tier",
    "doc" : "Possible tiers as defined by Genomics England",
    "symbols" : [ "NONE", "TIER1", "TIER2", "TIER3" ]
  }, {
    "type" : "record",
    "name" : "ReportEvent",
    "fields" : [ {
      "name" : "reportEventId",
      "type" : "string",
      "doc" : "Unique identifier for each report event, this has to be unique across the whole report, and it will be used by GEL\n    to validate the report"
    }, {
      "name" : "phenotype",
      "type" : "string",
      "doc" : "This is the phenotype (usually the HPO term or the disorder name) considered to report this variant"
    }, {
      "name" : "panelName",
      "type" : [ "null", "string" ],
      "doc" : "Gene Panel used from panelApp"
    }, {
      "name" : "panelVersion",
      "type" : [ "null", "string" ],
      "doc" : "Gene Panel Version"
    }, {
      "name" : "modeOfInheritance",
      "type" : "ReportedModeOfInheritance",
      "doc" : "Mode of inheritance used to analyze the family"
    }, {
      "name" : "genomicFeature",
      "type" : "GenomicFeature",
      "doc" : "This is the genomicsFeature of interest for this reported variant, please note that one variant can overlap more that one gene/transcript\n    If more than one gene/transcript is considered interesting for this particular variant, should be reported in two different ReportEvents"
    }, {
      "name" : "penetrance",
      "type" : "Penetrance",
      "doc" : "This is the penetrance assumed for scoring or classifying this variant"
    }, {
      "name" : "score",
      "type" : "float",
      "doc" : "This is the score provided by the company to reflect a variant's likelihood of explaining the phenotype using\n    a specific mode of Inheritance"
    }, {
      "name" : "vendorSpecificScores",
      "type" : [ "null", {
        "type" : "map",
        "values" : "float"
      } ],
      "doc" : "Other scores that the interpretation provider may add (for example phenotypically informed or family informed scores)"
    }, {
      "name" : "variantClassification",
      "type" : [ "null", "VariantClassification" ],
      "doc" : "Classification of the pathogenicity of this variant with respect to the phenotype"
    }, {
      "name" : "fullyExplainsPhenotype",
      "type" : [ "null", "boolean" ],
      "doc" : "This variant using this mode of inheritance can fully explain the phenotype? true or false"
    }, {
      "name" : "groupOfVariants",
      "type" : [ "null", "int" ],
      "doc" : "This value groups variants that together could explain the phenotype according to the\n    mode of inheritance used. All the variants sharing the same value will be considered in the same group.\n    This value is an integer unique in the whole analysis."
    }, {
      "name" : "eventJustification",
      "type" : "string",
      "doc" : "This is the description of why this variant would be reported, for example that it affects the protein in this way\n    and that this gene has been implicated in this disorder in these publications. Publications should be provided as PMIDs\n    using the format [PMID:8075643]. Other sources can be used in the same manner, e.g. [OMIM:163500]. Brackets need to be included."
    }, {
      "name" : "tier",
      "type" : [ "null", "Tier" ],
      "doc" : "Tier is a property of the model of inheritance and therefore is subject to change depending on the inheritance assumptions\n    This should be filled with the information provided by GEL"
    } ]
  }, {
    "type" : "record",
    "name" : "ReportedVariant",
    "fields" : [ {
      "name" : "chromosome",
      "type" : "string",
      "doc" : "chromosome, named as: 1-22,X,Y,MT or other contig names as defined in the BAM header"
    }, {
      "name" : "dbSNPid",
      "type" : [ "null", "string" ],
      "doc" : "variant ID in dbSNP"
    }, {
      "name" : "position",
      "type" : "int",
      "doc" : "position: Position 1-based"
    }, {
      "name" : "reference",
      "type" : "string",
      "doc" : "reference: Reference Allele sequence, the same provided in vcf"
    }, {
      "name" : "alternate",
      "type" : "string",
      "doc" : "alternate: Alternate Allele sequence, the same provided in vcf"
    }, {
      "name" : "calledGenotypes",
      "type" : {
        "type" : "array",
        "items" : "CalledGenotype"
      },
      "doc" : "array of genotypes for the family"
    }, {
      "name" : "reportEvents",
      "type" : {
        "type" : "array",
        "items" : "ReportEvent"
      },
      "doc" : "This is the scores across multiple modes of inheritance, for each model of inheritance analyzed,\n    the variants can have only one Report event."
    }, {
      "name" : "additionalTextualVariantAnnotations",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "For example a quote from a paper"
    }, {
      "name" : "evidenceIds",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "For example HGMD ID, dbSNP ID or Pubmed Id"
    }, {
      "name" : "additionalNumericVariantAnnotations",
      "type" : [ "null", {
        "type" : "map",
        "values" : "float"
      } ],
      "doc" : "For Example (Allele Frequency, sift, polyphen, mutationTaster, CADD. ..)"
    }, {
      "name" : "comments",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Comments"
    } ]
  }, {
    "type" : "record",
    "name" : "ReportedStructuralVariant",
    "fields" : [ {
      "name" : "chromosome",
      "type" : "string",
      "doc" : "chromosome, named as: 1-22,X,Y,MT(other contigs name)"
    }, {
      "name" : "start",
      "type" : "int",
      "doc" : "start: start position 1-based"
    }, {
      "name" : "end",
      "type" : "int",
      "doc" : "end: end position 1-based"
    }, {
      "name" : "type",
      "type" : "string",
      "doc" : "The ID field indicates the type of structural variant, and can be a colon-separated list of types and subtypes\n    (this is VCF Format): DEL, INS, DUP, INV, CNV, DUP:TANDEM, DEL:ME, INS:ME, INS:ME:ALU..."
    }, {
      "name" : "reference",
      "type" : "string",
      "doc" : "reference: Reference Allele sequence, the same provided in vcf"
    }, {
      "name" : "alternate",
      "type" : "string",
      "doc" : "alternate: Alternate Allele sequence, the same provided in vcf"
    }, {
      "name" : "calledGenotypes",
      "type" : {
        "type" : "array",
        "items" : "CalledGenotype"
      }
    }, {
      "name" : "reportEvents",
      "type" : {
        "type" : "array",
        "items" : "ReportEvent"
      },
      "doc" : "This is the scores across multiple modes of inheritance, for each model of inheritance analyzed,\n    the variants can have only one Report event."
    }, {
      "name" : "additionalTextualVariantAnnotations",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "For example HGMD ID)"
    }, {
      "name" : "evidenceIds",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "For example HGMD ID, dbSNP ID or Pubmed Id"
    }, {
      "name" : "additionalNumericVariantAnnotations",
      "type" : [ "null", {
        "type" : "map",
        "values" : "float"
      } ],
      "doc" : "For Example (Allele Frequency, sift, polyphen, mutationTaster, CADD. ..)"
    }, {
      "name" : "comments",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Comments"
    } ]
  }, {
    "type" : "enum",
    "name" : "ComplexGeneticPhenomena",
    "symbols" : [ "mosaicism", "monosomy", "disomy", "uniparental_disomy", "trisomy", "other_aneuploidy" ]
  }, {
    "type" : "record",
    "name" : "InterpretationRequestRD",
    "doc" : "This record represents basic information for this report",
    "fields" : [ {
      "name" : "versionControl",
      "type" : "VersionControl",
      "doc" : "Model version number"
    }, {
      "name" : "InterpretationRequestID",
      "type" : "string",
      "doc" : "Unique id for this report"
    }, {
      "name" : "genomeAssemblyVersion",
      "type" : "string",
      "doc" : "This is the version of the assembly used to align the reads",
      "default" : "GRCh37.p13"
    }, {
      "name" : "cellbaseVersion",
      "type" : "string",
      "doc" : "Cellbase version",
      "default" : "4.0"
    }, {
      "name" : "InterpretationRequestVersion",
      "type" : "int",
      "doc" : "Version of this request"
    }, {
      "name" : "interpretGenome",
      "type" : "boolean",
      "doc" : "Load data to system or also provide interpretation?",
      "default" : false
    }, {
      "name" : "workspace",
      "type" : {
        "type" : "array",
        "items" : "string"
      },
      "doc" : "The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access"
    }, {
      "name" : "BAMs",
      "type" : {
        "type" : "array",
        "items" : "File"
      },
      "doc" : "BAMs Files"
    }, {
      "name" : "VCFs",
      "type" : {
        "type" : "array",
        "items" : "File"
      },
      "doc" : "VCFs Files where SVs and CNVs are represented"
    }, {
      "name" : "bigWigs",
      "type" : [ "null", {
        "type" : "array",
        "items" : "File"
      } ],
      "doc" : "BigWig Files"
    }, {
      "name" : "pedigreeDiagram",
      "type" : [ "null", "File" ],
      "doc" : "Pedigree Diagram Files as an SGV"
    }, {
      "name" : "annotationFile",
      "type" : [ "null", "File" ],
      "doc" : "Variant Annotation using cellbase"
    }, {
      "name" : "otherFiles",
      "type" : [ "null", {
        "type" : "map",
        "values" : "File"
      } ],
      "doc" : "Other files that may be vendor specific\n    map of key: type of file, value: record of type File"
    }, {
      "name" : "pedigree",
      "type" : "Pedigree",
      "doc" : "Pedigree of the family to analyze"
    }, {
      "name" : "TieredVariants",
      "type" : {
        "type" : "array",
        "items" : "ReportedVariant"
      },
      "doc" : "Tiered Variants"
    }, {
      "name" : "TieringVersion",
      "type" : "string",
      "doc" : "Tiering Version"
    }, {
      "name" : "complexGeneticPhenomena",
      "type" : [ "null", "ComplexGeneticPhenomena" ],
      "doc" : "Complex Genetic Phenomena"
    }, {
      "name" : "otherFamilyHistory",
      "type" : [ "null", "OtherFamilyHistory" ],
      "doc" : "It is paternal or maternal with reference to the participant."
    }, {
      "name" : "analysisReturnURI",
      "type" : "string",
      "doc" : "name of the directory or endpoint where the analysed genome will be returned."
    }, {
      "name" : "analysisVersion",
      "type" : [ "null", "string" ],
      "doc" : "In the event that the provider has multiple versions of their system and an analysis will need to be provided against\n    a particular version, then that version goes here. If it is null the provider is free to analyse it against its more\n    recent stable version."
    }, {
      "name" : "genePanelsCoverage",
      "type" : [ "null", {
        "type" : "map",
        "values" : {
          "type" : "map",
          "values" : {
            "type" : "map",
            "values" : "float"
          }
        }
      } ],
      "doc" : "This map of key: panel_name, value: (map of key: gene, value: (map of metrics of key: metric name, value: float))\n    That is: a map of tables of genes and metrics"
    }, {
      "name" : "additionalInfo",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "Additional information"
    } ]
  }, {
    "type" : "record",
    "name" : "InterpretedGenomeRD",
    "fields" : [ {
      "name" : "versionControl",
      "type" : "VersionControl",
      "doc" : "Model version number"
    }, {
      "name" : "InterpretationRequestID",
      "type" : "string",
      "doc" : "This is the ID of the clinical interpretation request"
    }, {
      "name" : "analysisId",
      "type" : "string",
      "doc" : "This is the ID of the analysis carried out and is expected to be linked to the conditions and parameters\n    used to produce the clinical interpretation over this group of samples. It is critical to establish provenance.\n    It is expected that this id can be used to retrieve an analysis in the decision support/ variant exploration tools"
    }, {
      "name" : "companyName",
      "type" : "string",
      "doc" : "Name of the company"
    }, {
      "name" : "reportURI",
      "type" : "string",
      "doc" : "URI in the GEL file system where the company has upload files from this analysis"
    }, {
      "name" : "reportURL",
      "type" : "string",
      "doc" : "URL where the results can be accessed in the company's web interface"
    }, {
      "name" : "reportedVariants",
      "type" : {
        "type" : "array",
        "items" : "ReportedVariant"
      },
      "doc" : "List of all reported variants"
    }, {
      "name" : "referenceDatabasesVersions",
      "type" : {
        "type" : "map",
        "values" : "string"
      },
      "doc" : "This map should contains the version of the different DBs used in the process"
    }, {
      "name" : "softwareVersions",
      "type" : {
        "type" : "map",
        "values" : "string"
      },
      "doc" : "This map should contains the version of the different software in the process"
    }, {
      "name" : "reportedStructuralVariants",
      "type" : [ "null", {
        "type" : "array",
        "items" : "ReportedStructuralVariant"
      } ],
      "doc" : "List of all reported structural variants"
    }, {
      "name" : "comments",
      "type" : [ "null", {
        "type" : "array",
        "items" : "string"
      } ],
      "doc" : "Comments about the report"
    } ]
  }, {
    "type" : "record",
    "name" : "DeliveryTask",
    "doc" : "Defines a delivery task. A delivery task identifies an instance of the whole delivery\n    interaction cycle, whether successful or not. This allows traceability and identification\n    of failed deliveries",
    "fields" : [ {
      "name" : "tieringResultId",
      "type" : "int"
    }, {
      "name" : "basePath",
      "type" : "string",
      "doc" : "Base path on MDT storage where GEL should transfer files associated with the study"
    }, {
      "name" : "protocolVersion",
      "type" : "string"
    }, {
      "name" : "rareOrCancer",
      "type" : "string"
    } ]
  }, {
    "type" : "record",
    "name" : "TieringResult",
    "doc" : "Represents the results of a tiering process and its input patient data. TieringResult\n    is simply a more specific, less ambiguous term for \"cohort\".\n     We cannot use the InterpretationRequestRD structure because there may be many interpretation\n     requests for the same tiering results.",
    "fields" : [ {
      "name" : "versionControl",
      "type" : "VersionControl",
      "doc" : "Model version number"
    }, {
      "name" : "genomeAssemblyVersion",
      "type" : "string",
      "doc" : "This is the version of the assembly used to align the reads",
      "default" : "GRCh37.p13"
    }, {
      "name" : "cellbaseVersion",
      "type" : "string",
      "doc" : "Cellbase version",
      "default" : "4.0"
    }, {
      "name" : "workspace",
      "type" : {
        "type" : "array",
        "items" : "string"
      },
      "doc" : "The genome shall be assigned to the\n        workspaces(projects or domains with a predefined set of users) to control user access"
    }, {
      "name" : "BAMs",
      "type" : {
        "type" : "array",
        "items" : "File"
      },
      "doc" : "BAMs Files"
    }, {
      "name" : "VCFs",
      "type" : {
        "type" : "array",
        "items" : "File"
      },
      "doc" : "VCFs Files where SVs and CNVs are represented"
    }, {
      "name" : "bigWigs",
      "type" : [ "null", {
        "type" : "array",
        "items" : "File"
      } ],
      "doc" : "BigWig Files"
    }, {
      "name" : "pedigreeDiagram",
      "type" : [ "null", "File" ],
      "doc" : "Pedigree Diagram Files as an SGV"
    }, {
      "name" : "annotationFile",
      "type" : [ "null", "File" ],
      "doc" : "Variant Annotation using cellbase"
    }, {
      "name" : "otherFiles",
      "type" : [ "null", {
        "type" : "map",
        "values" : "File"
      } ],
      "doc" : "Other files that may be vendor specific\n        map of key: type of file, value: record of type File"
    }, {
      "name" : "pedigree",
      "type" : "Pedigree",
      "doc" : "Pedigree"
    }, {
      "name" : "TieredVariants",
      "type" : {
        "type" : "array",
        "items" : "ReportedVariant"
      },
      "doc" : "Tiered Variants"
    }, {
      "name" : "TieringVersion",
      "type" : "string",
      "doc" : "Tiering Version"
    }, {
      "name" : "complexGeneticPhenomena",
      "type" : [ "null", "ComplexGeneticPhenomena" ],
      "doc" : "Complex Genetic Phenomena"
    }, {
      "name" : "otherFamilyHistory",
      "type" : [ "null", "OtherFamilyHistory" ],
      "doc" : "It is paternal or maternal with reference to the participant."
    }, {
      "name" : "genePanelsCoverage",
      "type" : [ "null", {
        "type" : "map",
        "values" : {
          "type" : "map",
          "values" : {
            "type" : "map",
            "values" : "float"
          }
        }
      } ],
      "doc" : "This map of key: panel_name, value: (map of key: gene, value: (map of metrics of key: metric name, value: float))\n        That is: a map of tables of genes and metrics"
    }, {
      "name" : "additionalInfo",
      "type" : [ "null", {
        "type" : "map",
        "values" : "string"
      } ],
      "doc" : "Additional information"
    } ]
  }, {
    "type" : "record",
    "name" : "InterpretationData",
    "doc" : "Represents the set of all interpretation data (excluding file contents) to be stored in MDT for\n    one TieringResult.\n    Semantic restrictions (not automatically verifiable):\n        - All InterpretedGenomesRD in interpretationResults refer to the TieringResult tieringResult.\n        - All InterpretedGenomesRD in interpretationResults have passed the QC stage and have been\n          approved by the originating GMCs",
    "fields" : [ {
      "name" : "tieringResult",
      "type" : "TieringResult"
    }, {
      "name" : "interpretationResults",
      "type" : {
        "type" : "array",
        "items" : "InterpretedGenomeRD"
      }
    } ]
  } ],
  "messages" : {
    "login" : {
      "doc" : "Server returns a token to be used in subsequent calls.\n    Token expires after 20 minutes of not being used.\n    Token expires after 7 days of created - even if there is activity.",
      "request" : [ {
        "name" : "username",
        "type" : "string"
      }, {
        "name" : "password",
        "type" : "string"
      } ],
      "response" : "string"
    },
    "logout" : {
      "doc" : "Invalidate token",
      "request" : [ {
        "name" : "token",
        "type" : "string"
      } ],
      "response" : "null"
    },
    "createDeliveryTask" : {
      "doc" : "Creates a new delivery task and allocates a directory for it",
      "request" : [ {
        "name" : "token",
        "type" : "string"
      }, {
        "name" : "tieringResultId",
        "type" : "int"
      }, {
        "name" : "protocolVersion",
        "type" : "string"
      }, {
        "name" : "rareOrCancer",
        "type" : "string"
      } ],
      "response" : "DeliveryTask"
    },
    "filesDelivered" : {
      "doc" : "Notifies that RSync file transfers for this task are complete and MDT can\nproceed to process them (validate, ingest, or whichever process they need to do).",
      "request" : [ {
        "name" : "token",
        "type" : "string"
      }, {
        "name" : "tieringResultId",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "putInterpretationData" : {
      "doc" : "Sets all interpretation data (excluding file contents) for this TieringResult. The server\n    associates the metadata to the files. All files referenced by the TieringResult in interpretation_data\n    must exist in MDT Server - i.e. must have been successfully and completely copied. If no associated\n    data existed, it is created; if any data existed, it is completely replaced by the new data.",
      "request" : [ {
        "name" : "token",
        "type" : "string"
      }, {
        "name" : "interpretationData",
        "type" : "InterpretationData"
      } ],
      "response" : "null"
    },
    "delete" : {
      "doc" : "Deletes all data (including files) associated with the tieringResultId",
      "request" : [ {
        "name" : "token",
        "type" : "string"
      }, {
        "name" : "tieringResultId",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "filesOk" : {
      "doc" : "Notifies that MDT has correctly processed files for this tieringResultId, and that it is ready to\n    receive interpretation data.",
      "request" : [ {
        "name" : "token",
        "type" : "string"
      }, {
        "name" : "tieringResultId",
        "type" : "int"
      } ],
      "response" : "null"
    },
    "interpretationDataProcessed" : {
      "doc" : "Notifies that MDT has finished processing interpretation data\n    status: \"OK\" or \"ERROR\"\n    message: description of error if any, or empty if success",
      "request" : [ {
        "name" : "delivery_id",
        "type" : "int"
      }, {
        "name" : "status",
        "type" : "string"
      }, {
        "name" : "message",
        "type" : "string"
      } ],
      "response" : "null"
    }
  }
}